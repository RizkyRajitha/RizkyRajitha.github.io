{"version":3,"file":"component---src-templates-blog-post-js-a66f81af333fa74af8ff.js","mappings":"0NAQe,SAASA,EAAQC,GAAY,IAAX,KAAEC,GAAMD,EAuEvC,OACEE,EAAAA,cAAA,OAAKC,UAAU,qBACbD,EAAAA,cAACE,EAAAA,EAAM,MACPF,EAAAA,cAACG,EAAAA,EAAG,CACFC,MAAOL,EAAKM,eAAeC,YAAYF,MACvCG,YACER,EAAKM,eAAeC,YAAYC,aAChCR,EAAKM,eAAeG,QAEtBC,QAASV,EAAKM,eAAeC,YAAYG,UAkD3CT,EAAAA,cAAA,OAAKU,MAAM,cACTV,EAAAA,cAAA,OAAKU,MAAM,OACTV,EAAAA,cAAA,OAAKU,MAAM,kCACTV,EAAAA,cAAA,MAAIU,MAAM,QAAQX,EAAKM,eAAeC,YAAYF,OAElDJ,EAAAA,cAAA,WAEAA,EAAAA,cAAA,SAAG,WACOW,EAAAA,EAAAA,GAAoBZ,EAAKM,eAAeC,YAAYM,OAG9DZ,EAAAA,cAAA,WAEAA,EAAAA,cAAA,OAAKa,MAAO,CAAEC,SAAU,WACtBd,EAAAA,cAAA,WACEe,wBAAyB,CACvBC,OAAQjB,EAAKM,eAAeY,YA0ExCjB,EAAAA,cAACkB,EAAAA,EAAc,MAGrB,C","sources":["webpack://blog_by_rajitha/./src/templates/blog-post.js"],"sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Seo from \"../components/seo\"\nimport \"../styles/gist.css\"\nimport \"../styles/blogpost.css\"\nimport Footerblogpost from \"../components/footerblogpost\"\nimport Navbar from \"../components/navbar\"\nimport { formatDistanceToNow } from \"date-fns\"\nexport default function Blogpost({ data }) {\n  // console.log(data)\n\n  // const [postdata, setpostdata] = useState({})\n  // const [open, setopen] = useState(false)\n  // const [comment, setcomment] = useState(\"\")\n  // const [displayname, setdisplayname] = useState(\"\")\n  // const [email, setemail] = useState(\"\")\n  // const [comments, setcomments] = useState([])\n\n  // const [onceoffline, setonceoffline] = useState(false)\n\n  // console.log(data)\n\n  // useEffect(() => {\n  //   let id = data.markdownRemark.frontmatter.id\n\n  //   Axios.get(`${API}/api/getpost/${id}`)\n  //     .then(result2 => {\n  //       setpostdata(result2.data)\n  //     })\n  //     .catch(err => console.log(err))\n\n  //   Axios.get(`${API}/api/getcomments/${id}`)\n  //     .then(result3 => {\n  //       setcomments(result3.data)\n  //     })\n  //     .catch(err => {\n  //       console.log(err)\n  //     })\n  // }, [])\n\n  // const commentHandle = e => {\n  //   e.preventDefault()\n  //   let id = data.markdownRemark.frontmatter.id\n  //   var payload = {\n  //     displayName: displayname,\n  //     email: email,\n  //     content: comment,\n  //     postid: id,\n  //   }\n\n  //   // // console.log(payload)\n  //   // Axios.post(`${API}/api/newcomment`, payload)\n  //   //   .then(result => {\n  //   //     setcomment(\"\")\n  //   //     if (result.data.err === false) {\n  //   //       onCloseModal()\n  //   //       Axios.get(`${API}/api/getcomments/${id}`)\n  //   //         .then(result => {\n  //   //           setcomments(result.data)\n  //   //         })\n  //   //         .catch(err => {\n  //   //           console.log(err)\n  //   //         })\n  //   //     }\n  //   //   })\n  //   //   .catch(err => {\n  //   //     console.log(err)\n  //   //   })\n  // }\n\n  // const onOpenModal = e => {\n  //   e.preventDefault()\n  //   setopen(true)\n  // }\n\n  // const onCloseModal = () => {\n  //   setopen(false)\n  // }\n\n  return (\n    <div className=\"blogpostcontainer\">\n      <Navbar />\n      <Seo\n        title={data.markdownRemark.frontmatter.title}\n        description={\n          data.markdownRemark.frontmatter.description ||\n          data.markdownRemark.excerpt\n        }\n        ogimage={data.markdownRemark.frontmatter.ogimage}\n      />\n      {/* <Detector\n        onChange={con => {\n          setonceoffline(true)\n        }}\n        render={({ online }) => <div></div>}\n      />\n      <Offline>\n        <div className=\"offlinediv\">You appears to be offline</div>\n      </Offline>\n      <Online>\n        <div hidden={!onceoffline} className=\"onlinediv\">\n          Welcome Back\n        </div>\n      </Online> */}\n      {/* <Modal\n        // className=\"commentmodal\"\n        open={open}\n        onClose={onCloseModal}\n        closeIconSize={20}\n        styles={{ modal: { color: \"black\", width: \"50%\" } }}\n        center\n      >\n        <h4>i'd love to here your comments</h4>\n        <form onSubmit={commentHandle}>\n          <div class=\"form-group\">\n            <input\n              type=\"text\"\n              required\n              placeholder=\"your name\"\n              class=\"form-control\"\n              onChange={e => setdisplayname(e.target.value)}\n            ></input>\n          </div>\n          <div class=\"form-group\">\n            <input\n              class=\"form-control\"\n              type=\"email\"\n              required\n              placeholder=\"your email \"\n              onChange={e => setemail(e.target.value)}\n            ></input>\n          </div>\n\n          <button className=\"btn btn-primary\" type=\"submit\">\n            Comment\n          </button>\n        </form>\n      </Modal> */}\n      <div class=\"container \">\n        <div class=\"row\">\n          <div class=\"col-lg-12 col-xl-12 col-xxl-12\">\n            <h1 class=\"mt-4\">{data.markdownRemark.frontmatter.title}</h1>\n\n            <hr />\n            {/* {console.log(new Date().toISOString())} */}\n            <p>\n              Posted {formatDistanceToNow(data.markdownRemark.frontmatter.date)}\n            </p>\n\n            <hr />\n\n            <div style={{ fontSize: \"1.28em\" }}>\n              <section\n                dangerouslySetInnerHTML={{\n                  __html: data.markdownRemark.html,\n                }}\n              />\n            </div>\n            {/* <Markdown\n              children={markdown}\n              options={{\n                overrides: {\n                  GithubGist: {\n                    component: Gist,\n                  },\n                },\n              }}\n            /> */}\n\n            {/* <div class=\"card my-4 commentsection text-white \">\n              <h5 class=\"card-header  \">Leave a Comment:</h5>\n              <div class=\"card-body \">\n                <form onSubmit={onOpenModal}>\n                  <div class=\"form-group\">\n                    <textarea\n                      class=\"form-control\"\n                      rows=\"3\"\n                      required\n                      value={comment}\n                      onChange={e => setcomment(e.target.value)}\n                    ></textarea>\n                  </div>\n                  <button type=\"submit\" class=\"btn btn-primary\">\n                    Comment\n                  </button>\n                </form>\n              </div>\n            </div> */}\n\n            {/* {comments.map((ele, index) => {\n              return (\n                <div class=\"media mb-4\">\n                  <img\n                    class=\"d-flex mr-3 rounded-circle\"\n                    src=\"https://img.icons8.com/pastel-glyph/64/000000/person-male.png\"\n                    alt=\"\"\n                  />\n                  <div class=\"media-body\">\n                    <div className=\"commentheaderdiv\">\n                      <h3 class=\"mt-0\">{ele.displayName}</h3>{\" \"}\n                      <span className=\"commentfromnow\">\n                        {\" \"}\n                      </span>\n                    </div>\n\n                    {ele.content}\n                  </div>\n                </div>\n              )\n            })} */}\n          </div>\n\n          {/* <div class=\"col-lg-3 col-xl-2 col-xxl-2 \">\n            <div class=\"card my-4 commentsection\">\n              <h5 class=\"card-header\">Views</h5>\n              <div class=\"card-body\">\n                <div\n                  className={`input-group ${\n                    postdata.count ? \"\" : \"loadskceliton\"\n                  } `}\n                >\n                  <h5>{postdata.count}</h5>\n                </div>\n              </div>\n            </div>\n          </div> */}\n        </div>\n      </div>\n      <Footerblogpost />\n    </div>\n  )\n}\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        ogimage\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["Blogpost","_ref","data","React","className","Navbar","Seo","title","markdownRemark","frontmatter","description","excerpt","ogimage","class","formatDistanceToNow","date","style","fontSize","dangerouslySetInnerHTML","__html","html","Footerblogpost"],"sourceRoot":""}