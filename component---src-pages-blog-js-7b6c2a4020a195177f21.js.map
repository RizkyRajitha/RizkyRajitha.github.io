{"version":3,"file":"component---src-pages-blog-js-7b6c2a4020a195177f21.js","mappings":"8MAG8C,IAExCA,EAAI,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,KAuBP,OAvBOC,EAAAA,EAAAA,GAAAJ,EAAAC,GAAAD,EAAAK,UACRC,OAAA,WACE,OACEC,EAAAA,cAAA,OAAKC,UAAU,cACbD,EAAAA,cAAA,OAAKC,UAAU,sBACbD,EAAAA,cAAA,MAAIC,UAAU,cAAcC,KAAKC,MAAMC,OACvCJ,EAAAA,cAAA,KACEC,UAAU,cACVI,wBAAyB,CAAEC,OAAQJ,KAAKC,MAAMI,eAMhDP,EAAAA,cAACQ,EAAAA,KAAI,CAACC,GAAK,GAAEP,KAAKC,MAAMO,QAAST,UAAU,2BAA0B,gBAIvED,EAAAA,cAAA,OAAKC,UAAU,mCAAkC,WACvCU,EAAAA,EAAAA,GAAoBT,KAAKC,MAAMS,WAI/C,EAACnB,CAAA,CAvBO,CAASoB,EAAAA,WA0BnB,Q,8BCrBe,SAASC,EAAKX,GAM3B,MAAM,EAACY,EAAK,EAACC,IAAWC,EAAAA,EAAAA,UAAS,IAAIC,OAErCC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAWC,aAAY,IAAML,EAAQ,IAAIE,OAAS,KACxD,MAAO,KACLI,cAAcF,EAAS,CACxB,GACA,IAGH,MAAMG,EAAWpB,EAAMqB,KAAKC,kBAAkBC,MA8B9C,OACE1B,EAAAA,cAAA,OAAKC,UAAU,WACbD,EAAAA,cAAC2B,EAAAA,EAAM,MACP3B,EAAAA,cAAC4B,EAAAA,EAAG,CACFxB,MAAOD,EAAMqB,KAAKK,KAAKC,aAAa1B,MACpCG,YAAaJ,EAAMqB,KAAKK,KAAKC,aAAavB,cAE5CP,EAAAA,cAAA,OAAKC,UAAU,aACbD,EAAAA,cAAA,OAAKC,UAAU,OACbD,EAAAA,cAAA,OAAKC,UAAU,YACbD,EAAAA,cAAA,MAAIC,UAAU,QAAO,eAEnBD,EAAAA,cAAA,QAAMC,UAAU,uBAAsB,UAEvCsB,EAASQ,KAAI,CAACC,EAAStB,IAEpBV,EAAAA,cAACP,EAAI,CACHwC,IAAKD,EAAQE,KAAKC,OAAOC,KACzBhC,MAAO4B,EAAQE,KAAKG,YAAYjC,MAChCG,YAAayB,EAAQE,KAAKI,QAAU,OACpC1B,SAAUoB,EAAQE,KAAKG,YAAYE,KACnC7B,MAAOsB,EAAQE,KAAKC,OAAOC,UAiBnCpC,EAAAA,cAAA,OAAKC,UAAU,YAWbD,EAAAA,cAAA,OAAKC,UAAU,4BACbD,EAAAA,cAAA,MAAIC,UAAU,eAAc,QAC5BD,EAAAA,cAAA,OAAKC,UAAU,aACbD,EAAAA,cAAA,WAGEA,EAAAA,cAAA,MAAIC,UAAU,IAAIc,EAAKyB,4BAM5B,IACPxC,EAAAA,cAACyC,EAAAA,EAAc,MAGrB,C","sources":["webpack://blog_by_rajitha/./src/components/card.js","webpack://blog_by_rajitha/./src/pages/blog.js"],"sourcesContent":["import React, { Component } from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport \"../styles/card.css\"\r\nimport { formatDistanceToNow } from \"date-fns\"\r\n\r\nclass Card extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"card mb-4 \">\r\n        <div className=\"card-body postcard\">\r\n          <h2 className=\"card-title\">{this.props.title}</h2>\r\n          <p\r\n            className=\"card-text  \"\r\n            dangerouslySetInnerHTML={{ __html: this.props.description }}\r\n          >\r\n            {/* <Markdown>{this.props.description}</Markdown> */}\r\n\r\n            {/* <Markdown children={this.props.description} /> */}\r\n          </p>\r\n          <Link to={`${this.props.index}`} className=\"btn btn-outline-primary\">\r\n            Read More &rarr;\r\n          </Link>\r\n        </div>\r\n        <div className=\"card-footer postcard text-muted\">\r\n          Posted {formatDistanceToNow(this.props.postedon)}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Card\r\n","import React, { useEffect, useState } from \"react\"\r\nimport Card from \"../components/card\"\r\nimport Navbar from \"../components/navbar\"\r\nimport Seo from \"../components/seo\"\r\nimport Footerblogpost from \"../components/footerblogpost\"\r\nimport { graphql } from \"gatsby\"\r\nimport \"../styles/blog.css\"\r\n\r\n// const API = \"https://blogrizky.herokuapp.com\"\r\n\r\nexport default function Blog(props) {\r\n  // const [onceoffline, setonceoffline] = useState(false)\r\n  // const [isloading, setisloading] = useState(true)\r\n  // const [timediff, settimediff] = useState(0)\r\n  // const [timeoutsync, settimeoutsync] = useState(true)\r\n  // const [blogviews, setblogviews] = useState(\"\")\r\n  const [time, setTime] = useState(new Date())\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => setTime(new Date()), 1000)\r\n    return () => {\r\n      clearInterval(interval)\r\n    }\r\n  }, [])\r\n\r\n  // console.log(props)\r\n  const postdata = props.data.allMarkdownRemark.edges\r\n\r\n  // useEffect(() => {\r\n  //   fetch(\"https://worldtimeapi.org/api/ip\")\r\n  //     .then(res => res.json())\r\n  //     .then(result => {\r\n  //       var timeDiff = Math.abs(Date.now() / 1000 - result.unixtime)\r\n  //       settimediff(timeDiff / 60)\r\n  //       if (timeDiff > 600) {\r\n  //         settimeoutsync(false)\r\n  //         // console.log(\"Data appears to be \" + timeDiff / 60 + \" minutes old.\")\r\n  //       }\r\n  //     })\r\n  //     .catch(err => {\r\n  //       // console.log(err);\r\n  //     })\r\n\r\n  //   // Axios.get(`${API}/api/blog`, {\r\n  //   //   location: window.location.href,\r\n  //   // })\r\n  //   //   .then(result => {\r\n  //   //     if (result.data.err === false) {\r\n  //   //       setblogviews(result.data.blogviews)\r\n  //   //     }\r\n  //   //   })\r\n  //   //   .catch(err => {\r\n  //   //     // console.log(err);\r\n  //   //   })\r\n  // }, [])\r\n\r\n  return (\r\n    <div className=\"maindiv\">\r\n      <Navbar />\r\n      <Seo\r\n        title={props.data.site.siteMetadata.title}\r\n        description={props.data.site.siteMetadata.description}\r\n      />\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8\">\r\n            <h1 className=\"my-4\">\r\n              Blogged by &ensp;\r\n              <span className=\"smlltextblogheading\">Rizky</span>\r\n            </h1>\r\n            {postdata.map((element, index) => {\r\n              return (\r\n                <Card\r\n                  key={element.node.fields.slug}\r\n                  title={element.node.frontmatter.title}\r\n                  description={element.node.excerpt + \"....\"}\r\n                  postedon={element.node.frontmatter.date}\r\n                  index={element.node.fields.slug}\r\n                />\r\n              )\r\n            })}\r\n            {/* <ul class=\"pagination justify-content-center mb-4\">\r\n              <li class=\"page-item\">\r\n                <a class=\"page-link\" href=\"#\">\r\n                  &larr; Older\r\n                </a>\r\n              </li>\r\n              <li class=\"page-item disabled\">\r\n                <a class=\"page-link\" href=\"#\">\r\n                  Newer &rarr;\r\n                </a>\r\n              </li>\r\n            </ul> */}\r\n          </div>\r\n          <div className=\"col-lg-3\">\r\n            {/* <div className=\"card my-4 commentsection\">\r\n              <h5 className=\"card-header\">Total views All time</h5>\r\n              <div className=\"card-body\">\r\n                <div\r\n                  className={`input-group ${blogviews ? \"\" : \"loadskceliton\"} `}\r\n                >\r\n                  <h5 className=\"\">{blogviews}</h5>\r\n                </div>\r\n              </div>\r\n            </div> */}\r\n            <div className=\"card my-4 commentsection\">\r\n              <h5 className=\"card-header\">Time</h5>\r\n              <div className=\"card-body\">\r\n                <div\r\n                // className={`input-group ${blogviews ? \"\" : \"loadskceliton\"} `}\r\n                >\r\n                  <h5 className=\"\">{time.toLocaleTimeString()}</h5>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>{\" \"}\r\n      <Footerblogpost />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query PostDataQuery {\r\n    site {\r\n      siteMetadata {\r\n        description\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\", fromNow: true)\r\n            title\r\n            description\r\n            ogimage\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["Card","_Component","apply","arguments","_inheritsLoose","prototype","render","React","className","this","props","title","dangerouslySetInnerHTML","__html","description","Link","to","index","formatDistanceToNow","postedon","Component","Blog","time","setTime","useState","Date","useEffect","interval","setInterval","clearInterval","postdata","data","allMarkdownRemark","edges","Navbar","Seo","site","siteMetadata","map","element","key","node","fields","slug","frontmatter","excerpt","date","toLocaleTimeString","Footerblogpost"],"sourceRoot":""}